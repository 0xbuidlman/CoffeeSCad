// Generated by CoffeeScript 1.3.3
(function() {
  var __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  OpenCoffeeScad.DataStore = (function() {

    function DataStore() {
      this.webStoreCap = false;
      this.detect_capabilities();
    }

    DataStore.prototype.detect_capabilities = function() {
      if (typeof localStorage !== "undefined" && localStorage !== null) {
        console.log("Brower localstorage support ok");
        return this.webStoreCap = true;
      } else {
        return console.log("Your browser does not support HTML5 localStorage. Try upgrading.");
      }
    };

    DataStore.prototype.save_inBrowser = function(fileName, data) {
      if (fileName == null) {
        fileName = null;
      }
      if (data == null) {
        data = null;
      }
      if (this.webStoreCap) {
        try {
          if ((fileName != null) && (data != null)) {
            localStorage.setItem(fileName, data);
            return this.addToSaves_inBrowser(fileName);
          }
        } catch (e) {
          console.log("Error: " + e);
          if (e === QUOTA_EXCEEDED_ERR) {
            return console.log("Quota exceeded!");
          }
        }
      } else {
        return console.log("Unable to save , browser has no localstorage support");
      }
    };

    DataStore.prototype.load_fromBrower = function(fileName) {
      var data;
      if (fileName == null) {
        fileName = null;
      }
      try {
        data = "";
        if (fileName != null) {
          data = localStorage.getItem(fileName);
        }
        return data;
        return console.log(data);
      } catch (e) {
        return console.log("Unable to load data, sorry");
      }
    };

    DataStore.prototype.listSaves_fromBrowser = function() {
      var data;
      try {
        data = localStorage.getItem("files");
        if (data != null) {
          data = data.split(" ");
        } else {
          data = [];
        }
        console.log("Retrieved saves: " + data);
        return data;
      } catch (e) {
        return console.log("Unable to load files list, sorry");
      }
    };

    DataStore.prototype.addToSaves_inBrowser = function(filename) {
      var saves;
      saves = localStorage.getItem("files");
      if (!(saves != null)) {
        saves = [];
      } else {
        saves = saves.split(" ");
      }
      console.log("present saves: " + saves + ", adding file " + filename);
      if (__indexOf.call(saves, filename) >= 0) {
        console.log("NOT adding");
      } else {
        saves.push(filename);
      }
      saves = saves.join(" ");
      console.log("saving files: " + saves);
      return localStorage.setItem("files", saves);
    };

    DataStore.prototype.delete_fromBrowser = function(fileName) {
      if (fileName == null) {
        fileName = null;
      }
      if (fileName != null) {
        return localStorage.removeItem(fileName);
      }
    };

    return DataStore;

  })();

}).call(this);
