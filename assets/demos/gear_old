involuteGear=(numTeeth, circularPitch, pressureAngle, clearance, thickness)->

  #default values:
  if(arguments.length < 3) 
    pressureAngle = 20
  if(arguments.length < 4) 
    clearance = 0
  if(arguments.length < 4) 
    thickness = 1
  
  addendum = circularPitch / Math.PI
  dedendum = addendum + clearance
  
  #radiuses of the 4 circles:
  pitchRadius = numTeeth * circularPitch / (2 * Math.PI)
  baseRadius = pitchRadius * Math.cos(Math.PI * pressureAngle / 180)
  outerRadius = pitchRadius + addendum
  rootRadius = pitchRadius - dedendum

  maxtanlength = Math.sqrt(outerRadius*outerRadius - baseRadius*baseRadius)
  maxangle = maxtanlength / baseRadius

  tl_at_pitchcircle = Math.sqrt(pitchRadius*pitchRadius - baseRadius*baseRadius)
  angle_at_pitchcircle = tl_at_pitchcircle / baseRadius
  diffangle = angle_at_pitchcircle - Math.atan(angle_at_pitchcircle)
  angularToothWidthAtBase = Math.PI / numTeeth + 2*diffangle

  #build a single 2d tooth in the 'points' array:
  resolution = 5
  points = [new CSG.Vector2D(0,0)]
  for i in [0...resolution]
    #first side of the tooth:
    angle = maxangle * i / resolution
    tanlength = angle * baseRadius
    radvector = CSG.Vector2D.fromAngle(angle)    
    tanvector = radvector.normal()
    p = radvector.times(baseRadius).plus(tanvector.times(tanlength))
    points[i+1] = p
    
    #opposite side of the tooth:
    radvector = CSG.Vector2D.fromAngle(angularToothWidthAtBase - angle)    
    tanvector = radvector.normal().negated()
    p = radvector.times(baseRadius).plus(tanvector.times(tanlength))
    points[2 * resolution + 2 - i] = p

  #create the polygon and extrude into 3D:
  tooth3d = new CSG.Polygon2D(points).extrude({offset: [0, 0, thickness]})

  allteeth = new CSG()
  for i in [0..numTeeth]
    angle = i*360/numTeeth
    rotatedtooth = tooth3d.rotateZ(angle)
    allteeth = allteeth.unionForNonIntersecting(rotatedtooth)

  #build the root circle:  
  points = []
  toothAngle = 2 * Math.PI / numTeeth
  toothCenterAngle = 0.5 * angularToothWidthAtBase 
  for i in [0..numTeeth]
    angle = toothCenterAngle + i * toothAngle
    p = CSG.Vector2D.fromAngle(angle).times(rootRadius)
    points.push(p)

  #create the polygon and extrude into 3D:
  rootcircle = new CSG.Polygon2D(points).extrude({offset: [0, 0, thickness]})

  result = rootcircle.union(allteeth)

  #center at origin:
  result = result.translate([0, 0, -thickness/2])

  return result

params=
  numTeeth:10
  circularPitch:5
  pressureAngle:20
  clearance:0
  thickness:5
  centerholeradius:2

#gear = involuteGear(params.numTeeth,params.circularPitch,params.pressureAngle,
#                    params.clearance,params.thickness)