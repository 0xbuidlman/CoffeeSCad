// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(function(require) {
    var $, MainMenuView, mainMenu_template, marionette, _;
    $ = require('jquery');
    _ = require('underscore');
    marionette = require('marionette');
    require('bootstrap');
    mainMenu_template = require("text!templates/mainMenu.tmpl");
    MainMenuView = (function(_super) {

      __extends(MainMenuView, _super);

      MainMenuView.prototype.template = mainMenu_template;

      MainMenuView.prototype.triggers = {
        "mouseup .newFile": "file:new:mouseup",
        "mouseup .saveFile": "file:save:mouseup",
        "mouseup .loadFile": "file:load:mouseup",
        "mouseup .newProject": "project:new:mouseup",
        "mouseup .settings": "settings:mouseup",
        "mouseup .undo": "file:undo:mouseup",
        "mouseup .redo": "file:redo:mouseup"
      };

      function MainMenuView(options) {
        var _this = this;
        MainMenuView.__super__.constructor.call(this, options);
        this.app = require('app');
        this.on("file:new:mouseup", function() {
          return _this.app.vent.trigger("fileNewRequest", _this);
        });
        this.on("file:undo:mouseup", function() {
          if (!$('#undoBtn').hasClass("disabled")) {
            return _this.app.vent.trigger("undoRequest", _this);
          }
        });
        this.on("file:redo:mouseup", function() {
          if (!$('#redoBtn').hasClass("disabled")) {
            return _this.app.vent.trigger("redoRequest", _this);
          }
        });
        this.app.vent.bind("undoAvailable", function() {
          return $('#undoBtn').removeClass("disabled");
        });
        this.app.vent.bind("redoAvailable", function() {
          return $('#redoBtn').removeClass("disabled");
        });
        this.app.vent.bind("undoUnAvailable", function() {
          return $('#undoBtn').addClass("disabled");
        });
        this.app.vent.bind("redoUnAvailable", function() {
          return $('#redoBtn').addClass("disabled");
        });
        this.app.vent.bind("clearUndoRedo", function() {
          $('#undoBtn').addClass("disabled");
          return $('#redoBtn').addClass("disabled");
        });
      }

      return MainMenuView;

    })(marionette.CompositeView);
    return MainMenuView;
  });

}).call(this);
