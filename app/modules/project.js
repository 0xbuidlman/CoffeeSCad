// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(function(require) {
    var $, LocalStorage, Project, ProjectFile, backbone, _;
    $ = require('jquery');
    _ = require('underscore');
    backbone = require('backbone');
    LocalStorage = require('localstorage');
    ProjectFile = (function(_super) {

      __extends(ProjectFile, _super);

      ProjectFile.prototype.defaults = {
        name: "main",
        ext: "coscad",
        content: ""
      };

      ProjectFile.prototype.localStorage = new Backbone.LocalStorage("TestProjectFile");

      function ProjectFile(options) {
        ProjectFile.__super__.constructor.call(this, options);
      }

      return ProjectFile;

    })(backbone.Model);
    Project = (function(_super) {

      __extends(Project, _super);

      Project.prototype.model = ProjectFile;

      Project.prototype.localStorage = new Backbone.LocalStorage("Project");

      function Project(options) {
        Project.__super__.constructor.call(this, options);
      }

      Project.prototype["export"] = function(format) {};

      return Project;

    })(Backbone.Collection);
    return [ProjectFile, Project];
  });

  /*
    initialize:(options)->
      @bind "change:name", ()=>
        name = @get "name"
        console.log "Changed my name to " + name
  */


}).call(this);
