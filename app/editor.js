// Generated by CoffeeScript 1.3.3
(function() {

  define(function(require) {
    var $, CodeMirror, Editor, checkCodeEditorContent, codeUpdated, get_recentProjects, loadProject, newProject, opencoscad, projectName, saveProject, store, updateSolid, _,
      _this = this;
    $ = require('jquery');
    _ = require('underscore');
    CodeMirror = require('CodeMirror');
    require('foldcode');
    require('coffee_synhigh');
    opencoscad = require('opencoffeescad');
    store = opencoscad.Store();
    projectName = "MyProject";
    codeUpdated = true;
    updateSolid = function() {
      return cadProcessor.setCoffeeSCad(codeEditor.getValue());
    };
    checkCodeEditorContent = function() {
      if (codeEditor.lineCount() > 0) {
        return $('#updateBtn').removeClass("disabled");
      }
    };
    newProject = function() {
      codeEditor.setValue("");
      codeEditor.clearHistory();
      return updateUndoRedo();
    };
    saveProject = function() {
      console.log("saving project");
      if (projectName !== "") {
        console.log("YESsaving project " + projectName);
        store.save_file("local", projectName, codeEditor.getValue());
        return document.title = "OpenCoffeeSCad " + projectName;
      }
    };
    loadProject = function(projectNameToLoad) {
      if (projectNameToLoad !== "" && projectNameToLoad !== null) {
        projectName = projectNameToLoad;
        codeEditor.setValue(store.load_file("local", projectName));
        codeEditor.clearHistory();
        updateUndoRedo();
        return document.title = "OpenCoffeeSCad " + projectName;
      }
    };
    get_recentProjects = function() {
      var index, item, project, value, _ref, _results;
      _ref = store.get_files("local");
      _results = [];
      for (index in _ref) {
        project = _ref[index];
        value = project;
        item = "<li><a tabindex='-1' href='#' >" + value + "</a></li>";
        $('#recentFilesList').append(item);
        _results.push($('#fileLoadModalFileList').append(item));
      }
      return _results;
    };
    Editor = (function() {

      function Editor() {
        var _this = this;
        this.codeEditor = CodeMirror.fromTextArea(codeArea, {
          mode: "coffeescript",
          lineNumbers: true,
          gutter: true,
          matchBrackets: true,
          firstLineNumber: 1,
          onChange: function(arg, arg2) {
            _this.updateUndoRedo();
            codeUpdated = true;
            return document.title = "OpenCoffeeSCad " + " *" + projectName;
          },
          onGutterClick: function() {},
          extraKeys: {
            "Ctrl-Q": function(cm) {
              return foldFunc(cm, cm.getCursor().line);
            },
            "Ctrl-P": newProject,
            "Ctrl-S": saveProject
          }
        });
      }

      Editor.prototype.updateUndoRedo = function() {
        var redoes, undoes;
        redoes = this.codeEditor.historySize().redo;
        undoes = this.codeEditor.historySize().undo;
        if (redoes > 0) {
          $('#redoBtn').removeClass("disabled");
        } else {
          $('#redoBtn').addClass("disabled");
        }
        if (undoes > 0) {
          return $('#undoBtn').removeClass("disabled");
        } else {
          return $('#undoBtn').addClass("disabled");
        }
      };

      Editor.prototype.getValue = function() {
        return this.codeEditor.getValue();
      };

      $('#undoBtn').on('click', function(e) {
        codeEditor.undo();
        return updateUndoRedo();
      });

      $('#redoBtn').on('click', function(e) {
        codeEditor.redo();
        return updateUndoRedo();
      });

      $('#newFileBtn').on('click', function(e) {
        return newProject();
      });

      $('#saveFileBtn').on('click', function(e) {
        return $('#fileSaveModal').modal({
          "backdrop": false
        });
      });

      $('#realSaveBtn').on('click', function(e) {
        projectName = $('#projectFileName').val();
        saveProject();
        return $('#fileSaveModal').modal('hide');
      });

      $('#loadFileBtn').on('click', function(e) {
        return $('#fileLoadModal').modal({
          "backdrop": false
        });
      });

      $('#realLoadBtn').on('click', function(e) {
        var saveName;
        saveName = $('#loadProjectFileName').val();
        newProject();
        return $('#fileLoadModal').modal('hide');
      });

      $('#updateBtn').on('click', function(e) {
        if (codeUpdated) {
          codeUpdated = false;
          $('#updateBtn').addClass("disabled");
          updateSolid();
          return false;
        }
      });

      $('#settingsBtn').on('click', function(e) {
        return $('#settingsModal').modal({
          "backdrop": false
        });
      });

      $("#recentFilesList").on("click", "li a", function(e) {
        var pName;
        pName = $(this).text();
        return loadProject(pName);
      });

      $("#fileLoadModalFileList").on("click", "li a", function(e) {
        var pName;
        pName = $(this).text();
        return loadProject(pName);
      });

      return Editor;

    })();
    return Editor;
  });

}).call(this);
